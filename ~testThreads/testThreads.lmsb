DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VPR_ODOMETRY_COEFFICIENT
DATAF VPR_ODOMETRY_X
DATAF VPR_ODOMETRY_Y
DATAF VPR_ODOMETRY_RESET
DATAF VPR_ODOMETRY_RESXODOM
DATAF VPR_ODOMETRY_RESYODOM
DATAF VPR_ADVENCODER_LASTA
DATAF VPR_ADVENCODER_LASTB
DATAF VPR_ADVENCODER_LASTC
DATAF VPR_ADVENCODER_LASTD
DATAF VPR_ADVGYRO_GYRO_LAST
DATAF VPR_ADVGYRO_GYRO_ANGLE
DATAF VPR_COLORRGB_S_RED_K
DATAF VPR_COLORRGB_S_RED_B
DATAF VPR_COLORRGB_S_BLUE_K
DATAF VPR_COLORRGB_S_BLUE_B
DATAF VPR_COLORRGB_S_GREEN_K
DATAF VPR_COLORRGB_S_GREEN_B
DATAF VLV_COEF_1
DATAF VLV_ANGLE_7
DATAF VLV_RED_MIN_10
DATAF VLV_RED_MAX_10
DATAF VLV_BLUE_MIN_10
DATAF VLV_BLUE_MAX_10
DATAF VLV_GREEN_MIN_10
DATAF VLV_GREEN_MAX_10
DATAF VLV_XODOM_2
DATAF VLV_YODOM_2
DATAF VLV_ANGLE_8
DATAF VLV_ENCCHANGE_6
DATAF VLV_RED_11
DATAF VLV_BLUE_11
DATAF VLV_GREEN_11
DATAF VLV_ANGLE_3
DATAF VLV_ENCCHANGE_3
DATAF VLV_XODOM_4
DATAF VLV_YODOM_4
DATAF VLV_ANGLE_9
DATAF VLV_WRAPPED_ANGLE_9
DATAF VGV_ANGLE
DATAF VGV_ENCCHANGE
DATAF VGV_R
DATAF VGV_G
DATAF VGV_B
DATAF VGV_X
DATAF VGV_Y
DATAF VLV_WRAPPED_ANGLE_8
DATAF VGV_M1
DATAF VLV_VALUE_7
DATAF VLV_VALUE_8
DATAF VLV_A_9
DATAF VLV_R_11
DATAF VLV_G_11
DATAF VLV_B_11
DATA32 RUNCOUNTER_F_UART_0
DATA32 RUNCOUNTER_F_ODOM_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VPR_ODOMETRY_COEFFICIENT
    MOVEF_F 0.0 VPR_ODOMETRY_X
    MOVEF_F 0.0 VPR_ODOMETRY_Y
    MOVEF_F 0.0 VPR_ODOMETRY_RESET
    MOVEF_F 0.0 VPR_ODOMETRY_RESXODOM
    MOVEF_F 0.0 VPR_ODOMETRY_RESYODOM
    MOVEF_F 0.0 VPR_ADVENCODER_LASTA
    MOVEF_F 0.0 VPR_ADVENCODER_LASTB
    MOVEF_F 0.0 VPR_ADVENCODER_LASTC
    MOVEF_F 0.0 VPR_ADVENCODER_LASTD
    MOVEF_F 0.0 VPR_ADVGYRO_GYRO_LAST
    MOVEF_F 0.0 VPR_ADVGYRO_GYRO_ANGLE
    MOVEF_F 0.0 VPR_COLORRGB_S_RED_K
    MOVEF_F 0.0 VPR_COLORRGB_S_RED_B
    MOVEF_F 0.0 VPR_COLORRGB_S_BLUE_K
    MOVEF_F 0.0 VPR_COLORRGB_S_BLUE_B
    MOVEF_F 0.0 VPR_COLORRGB_S_GREEN_K
    MOVEF_F 0.0 VPR_COLORRGB_S_GREEN_B
    MOVEF_F 0.0 VLV_COEF_1
    MOVEF_F 0.0 VLV_ANGLE_7
    MOVEF_F 0.0 VLV_RED_MIN_10
    MOVEF_F 0.0 VLV_RED_MAX_10
    MOVEF_F 0.0 VLV_BLUE_MIN_10
    MOVEF_F 0.0 VLV_BLUE_MAX_10
    MOVEF_F 0.0 VLV_GREEN_MIN_10
    MOVEF_F 0.0 VLV_GREEN_MAX_10
    MOVEF_F 0.0 VLV_XODOM_2
    MOVEF_F 0.0 VLV_YODOM_2
    MOVEF_F 0.0 VLV_ANGLE_8
    MOVEF_F 0.0 VLV_ENCCHANGE_6
    MOVEF_F 0.0 VLV_RED_11
    MOVEF_F 0.0 VLV_BLUE_11
    MOVEF_F 0.0 VLV_GREEN_11
    MOVEF_F 0.0 VLV_ANGLE_3
    MOVEF_F 0.0 VLV_ENCCHANGE_3
    MOVEF_F 0.0 VLV_XODOM_4
    MOVEF_F 0.0 VLV_YODOM_4
    MOVEF_F 0.0 VLV_ANGLE_9
    MOVEF_F 0.0 VLV_WRAPPED_ANGLE_9
    MOVEF_F 0.0 VGV_ANGLE
    MOVEF_F 0.0 VGV_ENCCHANGE
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VLV_WRAPPED_ANGLE_8
    MOVEF_F 0.0 VGV_M1
    MOVEF_F 0.0 VLV_VALUE_7
    MOVEF_F 0.0 VLV_VALUE_8
    MOVEF_F 0.0 VLV_A_9
    MOVEF_F 0.0 VLV_R_11
    MOVEF_F 0.0 VLV_G_11
    MOVEF_F 0.0 VLV_B_11
    MOVE32_32 0 RUNCOUNTER_F_UART_0
    MOVE32_32 0 RUNCOUNTER_F_ODOM_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_UART_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_UART_0 0
    CALL GETANDINC32 RUNCOUNTER_F_UART_0 -1 RUNCOUNTER_F_UART_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ODOM_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOM_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ODOM_0 -1 RUNCOUNTER_F_ODOM_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_UART_0
subcall PROGRAM_F_ODOM_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch71
    WRITE32 ENDSUB_F_UART_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UART_0
  dispatch71:
    JR_NEQ32 SUBPROGRAM 1 dispatch72
    WRITE32 ENDSUB_F_ODOM_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOM_0
  dispatch72:
    MOVEF_F 0.0 VPR_ODOMETRY_COEFFICIENT
    MOVEF_F 0.0 VPR_ODOMETRY_X
    MOVEF_F 0.0 VPR_ODOMETRY_Y
    MOVEF_F 0.0 VPR_ODOMETRY_RESET
    MOVEF_F 0.0 VPR_ODOMETRY_RESXODOM
    MOVEF_F 0.0 VPR_ODOMETRY_RESYODOM
    MOVEF_F 0.0 VPR_ADVENCODER_LASTA
    MOVEF_F 0.0 VPR_ADVENCODER_LASTB
    MOVEF_F 0.0 VPR_ADVENCODER_LASTC
    MOVEF_F 0.0 VPR_ADVENCODER_LASTD
    MOVEF_F 0.0 VPR_ADVGYRO_GYRO_LAST
    MOVEF_F 0.0 VPR_ADVGYRO_GYRO_ANGLE
    MOVEF_F 0.0 VPR_COLORRGB_S_RED_K
    MOVEF_F 0.0 VPR_COLORRGB_S_RED_B
    MOVEF_F 0.0 VPR_COLORRGB_S_BLUE_K
    MOVEF_F 0.0 VPR_COLORRGB_S_BLUE_B
    MOVEF_F 0.0 VPR_COLORRGB_S_GREEN_K
    MOVEF_F 0.0 VPR_COLORRGB_S_GREEN_B
    MOVEF_F 0.0 VLV_COEF_1
    MOVEF_F 0.0 VLV_ANGLE_7
    MOVEF_F 0.0 VLV_RED_MIN_10
    MOVEF_F 0.0 VLV_RED_MAX_10
    MOVEF_F 0.0 VLV_BLUE_MIN_10
    MOVEF_F 0.0 VLV_BLUE_MAX_10
    MOVEF_F 0.0 VLV_GREEN_MIN_10
    MOVEF_F 0.0 VLV_GREEN_MAX_10
    MOVEF_F 0.0 VLV_XODOM_2
    MOVEF_F 0.0 VLV_YODOM_2
    MOVEF_F 0.0 VLV_ANGLE_8
    MOVEF_F 0.0 VLV_ENCCHANGE_6
    MOVEF_F 0.0 VLV_RED_11
    MOVEF_F 0.0 VLV_BLUE_11
    MOVEF_F 0.0 VLV_GREEN_11
    MOVEF_F 0.0 VLV_ANGLE_3
    MOVEF_F 0.0 VLV_ENCCHANGE_3
    MOVEF_F 0.0 VLV_XODOM_4
    MOVEF_F 0.0 VLV_YODOM_4
    MOVEF_F 0.0 VLV_ANGLE_9
    MOVEF_F 0.0 VLV_WRAPPED_ANGLE_9
    MOVEF_F 0.0 VGV_ANGLE
    MOVEF_F 0.0 VGV_ENCCHANGE
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_Y
    MOVEF_F 0.0 VLV_WRAPPED_ANGLE_8
    MOVEF_F 0.0 VGV_M1
    CALL LCD.CLEAR
    MOVEF_F 15.43 VLV_COEF_1
    WRITE32 ENDSUB_M_ODOMETRY_CONFIG_1:CALLSUB1 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ODOMETRY_CONFIG_1
CALLSUB1:
    WRITE32 ENDSUB_M_ADVENCODER_CONFIG_0:CALLSUB2 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVENCODER_CONFIG_0
CALLSUB2:
    MOVEF_F 0.0 VLV_ANGLE_7
    WRITE32 ENDSUB_M_ADVGYRO_RESETPORT2_1:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVGYRO_RESETPORT2_1
CALLSUB3:
    MOVEF_F 10.0 VLV_RED_MIN_10
    MOVEF_F 250.0 VLV_RED_MAX_10
    MOVEF_F 10.0 VLV_BLUE_MIN_10
    MOVEF_F 250.0 VLV_BLUE_MAX_10
    MOVEF_F 10.0 VLV_GREEN_MIN_10
    MOVEF_F 250.0 VLV_GREEN_MAX_10
    WRITE32 ENDSUB_M_COLORRGB_CONFIG_6:CALLSUB4 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_COLORRGB_CONFIG_6
CALLSUB4:
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 4.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    MOVEF_F 0.0 VLV_XODOM_2
    MOVEF_F 0.0 VLV_YODOM_2
    WRITE32 ENDSUB_M_ODOMETRY_RESET_2:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ODOMETRY_RESET_2
CALLSUB7:
    CALL THREAD.CREATEMUTEX VGV_M1
    MOVEF_F 0.0 VGV_ANGLE
    MOVEF_F 0.0 VGV_ENCCHANGE
    MOVEF_F 0.0 VGV_X
    MOVEF_F 0.0 VGV_Y
    DATA32 tmp9
    CALL GETANDINC32 RUNCOUNTER_F_UART_0 1  RUNCOUNTER_F_UART_0 tmp9
    JR_NEQ32 0 tmp9 alreadylaunched9
    OBJECT_START TF_UART_0
  alreadylaunched9:
    DATA32 tmp10
    CALL GETANDINC32 RUNCOUNTER_F_ODOM_0 1  RUNCOUNTER_F_ODOM_0 tmp10
    JR_NEQ32 0 tmp10 alreadylaunched10
    OBJECT_START TF_ODOM_0
  alreadylaunched10:
    DATA32 milliseconds11
	MOVEF_32 1000000.0 milliseconds11
	DATA32 timer11
	TIMER_WAIT milliseconds11 timer11
	TIMER_READY timer11
ENDTHREAD:
    RETURN
SUB_F_UART_0:
  while12:
    JR_NEQF 0.0 0.0 endwhile12
  whilebody12:
    DATA8 previous13
  tryaquire13:
	CALL GETANDSETLOCK VGV_M1 1 previous13
	JR_EQ8 0 previous13 success13
	SLEEP
	JR tryaquire13
  success13:
    WRITE32 ENDSUB_M_ADVGYRO_WRITEPORT2_1:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVGYRO_WRITEPORT2_1
CALLSUB14:
    MOVEF_F VLV_ANGLE_8 VGV_ANGLE
    WRITE32 ENDSUB_M_ADVENCODER_GETCHANGEA_1:CALLSUB15 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVENCODER_GETCHANGEA_1
CALLSUB15:
    MOVEF_F VLV_ENCCHANGE_6 VGV_ENCCHANGE
    DATA8 dummy16
	CALL GETANDSETLOCK VGV_M1 0 dummy16
    WRITE32 ENDSUB_M_COLORRGB_READPORT3_3:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_COLORRGB_READPORT3_3
CALLSUB17:
    MOVEF_F VLV_RED_11 VGV_R
    MOVEF_F VLV_BLUE_11 VGV_G
    MOVEF_F VLV_GREEN_11 VGV_B
    JR_EQF 0.0 0.0 whilebody12
  endwhile12:
RETSUB_F_UART_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UART_0:
SUB_F_ODOM_0:
  while18:
    JR_NEQF 0.0 0.0 endwhile18
  whilebody18:
    DATA8 previous19
  tryaquire19:
	CALL GETANDSETLOCK VGV_M1 1 previous19
	JR_EQ8 0 previous19 success19
	SLEEP
	JR tryaquire19
  success19:
    MOVEF_F VGV_ANGLE VLV_ANGLE_3
    MOVEF_F VGV_ENCCHANGE VLV_ENCCHANGE_3
    WRITE32 ENDSUB_M_ODOMETRY_WRITE_2:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ODOMETRY_WRITE_2
CALLSUB20:
    DATA8 dummy21
	CALL GETANDSETLOCK VGV_M1 0 dummy21
    WRITE32 ENDSUB_M_ODOMETRY_READ_2:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ODOMETRY_READ_2
CALLSUB22:
    MOVEF_F VLV_XODOM_4 VGV_X
    MOVEF_F VLV_YODOM_4 VGV_Y
    STRINGS VALUE_FORMATTED VGV_X '%g' 99 S.0
    CALL LCD.TEXT 1.0 5.0 5.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_Y '%g' 99 S.0
    CALL LCD.TEXT 1.0 5.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_ANGLE '%g' 99 S.0
    CALL LCD.TEXT 1.0 5.0 95.0 2.0 S.0
    JR_EQF 0.0 0.0 whilebody18
  endwhile18:
RETSUB_F_ODOM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOM_0:
SUB_M_ODOMETRY_CONFIG_1:
    MOVEF_F VLV_COEF_1 VPR_ODOMETRY_COEFFICIENT
    MOVEF_F 0.0 VPR_ODOMETRY_X
    MOVEF_F 0.0 VPR_ODOMETRY_Y
    MOVEF_F 0.0 VPR_ODOMETRY_RESET
    MOVEF_F 0.0 VPR_ODOMETRY_RESXODOM
    MOVEF_F 0.0 VPR_ODOMETRY_RESYODOM
RETSUB_M_ODOMETRY_CONFIG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ODOMETRY_CONFIG_1:
SUB_M_ODOMETRY_RESET_2:
    MOVEF_F VLV_XODOM_2 VPR_ODOMETRY_RESXODOM
    MOVEF_F VLV_YODOM_2 VPR_ODOMETRY_RESYODOM
    MOVEF_F 1.0 VPR_ODOMETRY_RESET
RETSUB_M_ODOMETRY_RESET_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ODOMETRY_RESET_2:
SUB_M_ODOMETRY_WRITE_2:
    JR_NEQF VPR_ODOMETRY_RESET 1.0 else29_1
    MOVEF_F VPR_ODOMETRY_RESXODOM VPR_ODOMETRY_X
    MOVEF_F VPR_ODOMETRY_RESYODOM VPR_ODOMETRY_Y
    MOVEF_F 0.0 VPR_ODOMETRY_RESET
    JR endif29
  else29_1:
    DATAF tmpf30
    DATA8 flag30
    DIVF VLV_ENCCHANGE_3 VPR_ODOMETRY_COEFFICIENT tmpf30
    CP_EQF 0.0 VPR_ODOMETRY_COEFFICIENT flag30
    SELECTF flag30 0.0 tmpf30 F.1

    DIVF VLV_ANGLE_3 57.295779513082 F.3
    DATAF tmpf32
	MULF F.3 57.295779513082 tmpf32
	MATH COS tmpf32 F.2
    MULF F.1 F.2 F.0
    ADDF VPR_ODOMETRY_X F.0 VPR_ODOMETRY_X
    DATAF tmpf35
    DATA8 flag35
    DIVF VLV_ENCCHANGE_3 VPR_ODOMETRY_COEFFICIENT tmpf35
    CP_EQF 0.0 VPR_ODOMETRY_COEFFICIENT flag35
    SELECTF flag35 0.0 tmpf35 F.1

    DIVF VLV_ANGLE_3 57.295779513082 F.3
    DATAF tmpf37
	MULF F.3 57.295779513082  tmpf37
	MATH SIN  tmpf37 F.2
    MULF F.1 F.2 F.0
    ADDF VPR_ODOMETRY_Y F.0 VPR_ODOMETRY_Y
  else29_2:
  endif29:
RETSUB_M_ODOMETRY_WRITE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ODOMETRY_WRITE_2:
SUB_M_ODOMETRY_READ_2:
    MOVEF_F VPR_ODOMETRY_X VLV_XODOM_4
    MOVEF_F VPR_ODOMETRY_Y VLV_YODOM_4
RETSUB_M_ODOMETRY_READ_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ODOMETRY_READ_2:
SUB_M_ADVENCODER_CONFIG_0:
    MOVEF_F 0.0 VPR_ADVENCODER_LASTA
    MOVEF_F 0.0 VPR_ADVENCODER_LASTB
    MOVEF_F 0.0 VPR_ADVENCODER_LASTC
    MOVEF_F 0.0 VPR_ADVENCODER_LASTD
RETSUB_M_ADVENCODER_CONFIG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVENCODER_CONFIG_0:
SUB_M_ADVENCODER_GETCHANGEA_1:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF F.0 VPR_ADVENCODER_LASTA VLV_ENCCHANGE_6
    CALL MOTOR.GETCOUNT 'A' VPR_ADVENCODER_LASTA
RETSUB_M_ADVENCODER_GETCHANGEA_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVENCODER_GETCHANGEA_1:
SUB_M_ADVGYRO_RESETPORT2_1:
    INPUT_READEXT 0 1 0 -1 18 1 s2out1
	MOVE32_F s2out1 VLV_VALUE_7
    SUBF VLV_VALUE_7 VLV_ANGLE_7 VPR_ADVGYRO_GYRO_LAST
RETSUB_M_ADVGYRO_RESETPORT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVGYRO_RESETPORT2_1:
SUB_M_ADVGYRO_WRITEPORT2_1:
    INPUT_READEXT 0 1 0 -1 18 1 s2out1
	MOVE32_F s2out1 VLV_VALUE_8
    MOVEF_F VLV_VALUE_8 VLV_ANGLE_9
    WRITE32 ENDSUB_M_TOOLBOX_ANGLEWRAP_2:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_TOOLBOX_ANGLEWRAP_2
CALLSUB46:
    MOVEF_F VLV_WRAPPED_ANGLE_9 VLV_WRAPPED_ANGLE_8
    SUBF VLV_WRAPPED_ANGLE_8 VPR_ADVGYRO_GYRO_LAST VLV_ANGLE_8
    MOVEF_F VLV_ANGLE_8 VPR_ADVGYRO_GYRO_ANGLE
RETSUB_M_ADVGYRO_WRITEPORT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVGYRO_WRITEPORT2_1:
SUB_M_TOOLBOX_ANGLEWRAP_2:
    JR_GTEQF VLV_ANGLE_9 0.0 else48_1
    MOVEF_F -180.0 VLV_A_9
    JR endif48
  else48_1:
    MOVEF_F 180.0 VLV_A_9
  else48_2:
  endif48:
    ADDF VLV_ANGLE_9 VLV_A_9 F.1
    MATH MOD F.1 360.0 F.0
    SUBF F.0 VLV_A_9 VLV_WRAPPED_ANGLE_9
RETSUB_M_TOOLBOX_ANGLEWRAP_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_TOOLBOX_ANGLEWRAP_2:
SUB_M_COLORRGB_CONFIG_6:
    SUBF VLV_RED_MAX_10 VLV_RED_MIN_10 F.0
    DATAF tmpf53
    DATA8 flag53
    DIVF 100.0 F.0 tmpf53
    CP_EQF 0.0 F.0 flag53
    SELECTF flag53 0.0 tmpf53 VPR_COLORRGB_S_RED_K

    MULF VLV_RED_MIN_10 -1.0 F.0
    MULF F.0 VPR_COLORRGB_S_RED_K VPR_COLORRGB_S_RED_B
    SUBF VLV_BLUE_MAX_10 VLV_BLUE_MIN_10 F.0
    DATAF tmpf57
    DATA8 flag57
    DIVF 100.0 F.0 tmpf57
    CP_EQF 0.0 F.0 flag57
    SELECTF flag57 0.0 tmpf57 VPR_COLORRGB_S_BLUE_K

    MULF VLV_BLUE_MIN_10 -1.0 F.0
    MULF F.0 VPR_COLORRGB_S_BLUE_K VPR_COLORRGB_S_BLUE_B
    SUBF VLV_GREEN_MAX_10 VLV_GREEN_MIN_10 F.0
    DATAF tmpf61
    DATA8 flag61
    DIVF 100.0 F.0 tmpf61
    CP_EQF 0.0 F.0 flag61
    SELECTF flag61 0.0 tmpf61 VPR_COLORRGB_S_GREEN_K

    MULF VLV_GREEN_MIN_10 -1.0 F.0
    MULF F.0 VPR_COLORRGB_S_GREEN_K VPR_COLORRGB_S_GREEN_B
RETSUB_M_COLORRGB_CONFIG_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_COLORRGB_CONFIG_6:
SUB_M_COLORRGB_READPORT3_3:
    MOVEF_F 0.0 VLV_R_11
    MOVEF_F 0.0 VLV_G_11
    MOVEF_F 0.0 VLV_B_11
    INPUT_READEXT 0 2 0 -1 18 3 s3out1 s3out2 s3out3
	MOVE32_F s3out1 VLV_R_11
	MOVE32_F s3out2 VLV_G_11
	MOVE32_F s3out3 VLV_B_11
    MULF VLV_R_11 VPR_COLORRGB_S_RED_K F.0
    ADDF F.0 VPR_COLORRGB_S_RED_B VLV_RED_11
    MULF VLV_B_11 VPR_COLORRGB_S_BLUE_K F.0
    ADDF F.0 VPR_COLORRGB_S_BLUE_B VLV_BLUE_11
    MULF VLV_G_11 VPR_COLORRGB_S_GREEN_K F.0
    ADDF F.0 VPR_COLORRGB_S_GREEN_B VLV_GREEN_11
RETSUB_M_COLORRGB_READPORT3_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_COLORRGB_READPORT3_3:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall THREAD.CREATEMUTEX	// F
{
	OUT_F index

	DATA8 zero
	MOVE8_8 0 zero

	DATA32 idx
	ARRAY SIZE LOCKS idx
	ARRAY_APPEND LOCKS zero

	MOVE32_F idx index
}
subcall GETANDSETLOCK           // V
{
	IN_F index						// index as float as being used in Basic. 
	                                // when not valid do nothing and return newvalue as oldvalue (prevent aquiring lock)
	IN_8  newvalue                  // set to this value
	OUT_8 oldvalue                  // return previous value

	DATA32 size
	DATA32 idx
	MOVEF_32 index idx
	ARRAY SIZE LOCKS size
	JR_LT32 idx 0 outofbounds
	JR_GTEQ32 idx size outofbounds

	ARRAY_READ LOCKS idx oldvalue
	ARRAY_WRITE LOCKS idx newvalue
	RETURN

outofbounds:
	MOVE8_8 newvalue oldvalue
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
