pr_odometry_coefficient = 0
pr_odometry_x = 0
pr_odometry_y = 0
pr_odometry_reset = 0
pr_odometry_resxodom = 0
pr_odometry_resyodom = 0
pr_advencoder_lasta = 0
pr_advencoder_lastb = 0
pr_advencoder_lastc = 0
pr_advencoder_lastd = 0
pr_advgyro_gyro_last = 0
pr_advgyro_gyro_angle = 0
pr_colorrgb_s_red_k = 0
pr_colorrgb_s_red_b = 0
pr_colorrgb_s_blue_k = 0
pr_colorrgb_s_blue_b = 0
pr_colorrgb_s_green_k = 0
pr_colorrgb_s_green_b = 0
lv_coef_1 = 0
lv_angle_7 = 0
lv_red_min_10 = 0
lv_red_max_10 = 0
lv_blue_min_10 = 0
lv_blue_max_10 = 0
lv_green_min_10 = 0
lv_green_max_10 = 0
lv_xodom_2 = 0
lv_yodom_2 = 0
lv_angle_8 = 0
lv_encchange_6 = 0
lv_red_11 = 0
lv_blue_11 = 0
lv_green_11 = 0
lv_angle_3 = 0
lv_encchange_3 = 0
lv_xodom_4 = 0
lv_yodom_4 = 0
lv_angle_9 = 0
lv_wrapped_angle_9 = 0
gv_angle = 0
gv_encchange = 0
gv_r = 0
gv_g = 0
gv_b = 0
gv_x = 0
gv_y = 0
lv_wrapped_angle_8 = 0
gv_m1 = 0
LCD.Clear ()
lv_coef_1 = 15.43
m_odometry_config_1 ()
m_advencoder_config_0 ()
lv_angle_7 = 0
m_advgyro_resetport2_1 ()
lv_red_min_10 = 10
lv_red_max_10 = 250
lv_blue_min_10 = 10
lv_blue_max_10 = 250
lv_green_min_10 = 10
lv_green_max_10 = 250
m_colorrgb_config_6 ()
Sensor.SetMode ( 2 , 0 )
Sensor.SetMode ( 3 , 4 )
lv_xodom_2 = 0
lv_yodom_2 = 0
m_odometry_reset_2 ()
gv_m1 = Thread.CreateMutex ()
gv_angle = 0
gv_encchange = 0
gv_x = 0
gv_y = 0
Thread.Run = f_uart_0
Thread.Run = f_odom_0
Program.Delay ( 1000000 )
Sub f_uart_0
While 0 = 0
Thread.Lock ( gv_m1 )
m_advgyro_writeport2_1 ()
gv_angle = lv_angle_8
m_advencoder_getchangea_1 ()
gv_encchange = lv_encchange_6
Thread.Unlock ( gv_m1 )
m_colorrgb_readport3_3 ()
gv_r = lv_red_11
gv_g = lv_blue_11
gv_b = lv_green_11
EndWhile
EndSub
Sub f_odom_0
While 0 = 0
Thread.Lock ( gv_m1 )
lv_angle_3 = gv_angle
lv_encchange_3 = gv_encchange
m_odometry_write_2 ()
Thread.Unlock ( gv_m1 )
m_odometry_read_2 ()
gv_x = lv_xodom_4
gv_y = lv_yodom_4
LCD.Text ( 1 , 5 , 5 , 2 , gv_x )
LCD.Text ( 1 , 5 , 50 , 2 , gv_y )
LCD.Text ( 1 , 5 , 95 , 2 , gv_angle )
EndWhile
EndSub
Sub m_odometry_config_1
pr_odometry_coefficient = lv_coef_1
pr_odometry_x = 0
pr_odometry_y = 0
pr_odometry_reset = 0
pr_odometry_resxodom = 0
pr_odometry_resyodom = 0
EndSub
Sub m_odometry_reset_2
pr_odometry_resxodom = lv_xodom_2
pr_odometry_resyodom = lv_yodom_2
pr_odometry_reset = 1
EndSub
Sub m_odometry_write_2
If pr_odometry_reset = 1 Then
pr_odometry_x = pr_odometry_resxodom
pr_odometry_y = pr_odometry_resyodom
pr_odometry_reset = 0
Else
pr_odometry_x = pr_odometry_x + lv_encchange_3 / pr_odometry_coefficient * Math.Cos ( Math.GetRadians ( lv_angle_3 ) )
pr_odometry_y = pr_odometry_y + lv_encchange_3 / pr_odometry_coefficient * Math.Sin ( Math.GetRadians ( lv_angle_3 ) )
EndIf
EndSub
Sub m_odometry_read_2
lv_xodom_4 = pr_odometry_x
lv_yodom_4 = pr_odometry_y
EndSub
Sub m_advencoder_config_0
pr_advencoder_lasta = 0
pr_advencoder_lastb = 0
pr_advencoder_lastc = 0
pr_advencoder_lastd = 0
EndSub
Sub m_advencoder_getchangea_1
lv_encchange_6 = Motor.GetCount ( "A" ) - pr_advencoder_lasta
pr_advencoder_lasta = Motor.GetCount ( "A" )
EndSub
Sub m_advgyro_resetport2_1
lv_value_7 = Sensor2.Raw1 ()
pr_advgyro_gyro_last = lv_value_7 - lv_angle_7
EndSub
Sub m_advgyro_writeport2_1
lv_value_8 = Sensor2.Raw1 ()
lv_angle_9 = lv_value_8
m_toolbox_anglewrap_2 ()
lv_wrapped_angle_8 = lv_wrapped_angle_9
lv_angle_8 = lv_wrapped_angle_8 - pr_advgyro_gyro_last
pr_advgyro_gyro_angle = lv_angle_8
EndSub
Sub m_toolbox_anglewrap_2
If lv_angle_9 < 0 Then
lv_a_9 = - 180
Else
lv_a_9 = 180
EndIf
lv_wrapped_angle_9 = Math.Remainder ( ( lv_angle_9 + lv_a_9 ) , 360 ) - lv_a_9
EndSub
Sub m_colorrgb_config_6
pr_colorrgb_s_red_k = 100 / ( lv_red_max_10 - lv_red_min_10 )
pr_colorrgb_s_red_b = lv_red_min_10 * ( - 1 ) * pr_colorrgb_s_red_k
pr_colorrgb_s_blue_k = 100 / ( lv_blue_max_10 - lv_blue_min_10 )
pr_colorrgb_s_blue_b = lv_blue_min_10 * ( - 1 ) * pr_colorrgb_s_blue_k
pr_colorrgb_s_green_k = 100 / ( lv_green_max_10 - lv_green_min_10 )
pr_colorrgb_s_green_b = lv_green_min_10 * ( - 1 ) * pr_colorrgb_s_green_k
EndSub
Sub m_colorrgb_readport3_3
lv_r_11 = 0
lv_g_11 = 0
lv_b_11 = 0
Sensor3.Raw3 ( lv_r_11 , lv_g_11 , lv_b_11 )
lv_red_11 = lv_r_11 * pr_colorrgb_s_red_k + pr_colorrgb_s_red_b
lv_blue_11 = lv_b_11 * pr_colorrgb_s_blue_k + pr_colorrgb_s_blue_b
lv_green_11 = lv_g_11 * pr_colorrgb_s_green_k + pr_colorrgb_s_green_b
EndSub
