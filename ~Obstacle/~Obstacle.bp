pr_advgyro_gyro_last = 0
pr_advgyro_gyro_angle = 0
pr_colorrgb_s_red_k = 0
pr_colorrgb_s_red_b = 0
pr_colorrgb_s_blue_k = 0
pr_colorrgb_s_blue_b = 0
pr_colorrgb_s_green_k = 0
pr_colorrgb_s_green_b = 0
pr_odometry_coefficient = 0
pr_odometry_x = 0
pr_odometry_y = 0
pr_odometry_reset = 0
pr_odometry_resxodom = 0
pr_odometry_resyodom = 0
pr_advencoder_lasta = 0
pr_advencoder_lastb = 0
pr_advencoder_lastc = 0
pr_advencoder_lastd = 0
pr_steercontrol_kp = 0
pr_steercontrol_ki = 0
pr_steercontrol_kd = 0
pr_steercontrol_limit = 0
pr_steercontrol_steer_center = 0
pr_steercontrol_steer_target = 0
pr_steercontrol_error_old = 0
pr_steercontrol_error_sum = 0
lv_port_10 = 0
lv_result_10 = 0
lv_port_11 = 0
lv_red_min_14 = 0
lv_red_max_14 = 0
lv_blue_min_14 = 0
lv_blue_max_14 = 0
lv_green_min_14 = 0
lv_green_max_14 = 0
lv_coef_16 = 0
lv_angle_12 = 0
lv_in_kp_22 = 0
lv_in_ki_22 = 0
lv_in_kd_22 = 0
lv_in_limit_22 = 0
lv_in_steer_center_22 = 0
lv_x_3 = 0
lv_y_3 = 0
lv_iswhite_1 = 0
lv_isorange_1 = 0
lv_turnangle_6 = 0
lv_angle_13 = 0
lv_red_15 = 0
lv_blue_15 = 0
lv_green_15 = 0
lv_port_26 = 0
lv_x_26 = 0
lv_y_26 = 0
lv_signature_26 = 0
lv_encoder_23 = 0
lv_power_23 = 0
lv_change_21 = 0
lv_angle_17 = 0
lv_encchange_17 = 0
lv_xodom_18 = 0
lv_yodom_18 = 0
lv_y_27 = 0
lv_x_27 = 0
lv_n_27 = 0
lv_angle_28 = 0
lv_wrapped_angle_28 = 0
lv_angle_2 = 0
lv_aim_2 = 0
lv_target_25 = 0
lv_xodom_19 = 0
lv_yodom_19 = 0
lv_x_5 = 0
lv_y_5 = 0
lv_x_24 = 0
lv_min_24 = 0
lv_max_24 = 0
lv_n_24 = 0
gv_result = 0
gv_iswhite = 0
gv_isorange = 0
gv_gyroangle = 0
gv_r = 0
gv_g = 0
gv_b = 0
gv_pixyx = 0
gv_pixyy = 0
gv_signature = 0
gv_powerc = 0
gv_encchangea = 0
gv_x = 0
gv_y = 0
lv_heading_3 = 0
lv_error_3 = 0
lv_headingdifference_3 = 0
lv_iswhite_4 = 0
lv_isorange_4 = 0
lv_iswhite_6 = 0
lv_isorange_6 = 0
lv_iswhite_9 = 0
lv_isorange_9 = 0
lv_angle_13 = 0
lv_target_23 = 0
gv_col = 0
gv_rmin = 0
gv_rmax = 0
gv_gmin = 0
gv_gmax = 0
gv_bmin = 0
gv_bmax = 0
gv_anglekp = 0
gv_anglekd = 0
gv_angleold = 0
gv_clockwise = 0
gv_turncounter = 0
gv_turnangle = 0
gv_fakewheelbase = 0
gv_uartready = 0
gv_steeringready = 0
gv_odometryready = 0
gv_i2cready = 0
gv_anglepointx = 0
gv_anglepointy = 0
gv_powercenter = 0
gv_powerdetour = 0
gv_lastsignature = 0
Sensor.SetMode ( 2 , 0 )
Sensor.SetMode ( 3 , 4 )
lv_port_10 = 2
m_advgyro_checkreset_2 ()
gv_result = lv_result_10
While gv_result = 0
lv_port_11 = 2
m_advgyro_hardreset_1 ()
lv_port_10 = 2
m_advgyro_checkreset_2 ()
gv_result = lv_result_10
EndWhile
gv_col = EV3File.OpenRead ( "col" )
gv_rmin = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_rmax = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_gmin = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_gmax = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_bmin = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_bmax = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
lv_red_min_14 = gv_rmin
lv_red_max_14 = gv_rmax
lv_blue_min_14 = gv_gmin
lv_blue_max_14 = gv_gmax
lv_green_min_14 = gv_bmin
lv_green_max_14 = gv_bmax
m_colorrgb_config_6 ()
lv_coef_16 = 15.43
m_odometry_config_1 ()
lv_angle_12 = 0
m_advgyro_resetport2_1 ()
m_advencoder_config_0 ()
lv_in_kp_22 = 1.5
lv_in_ki_22 = 0.1
lv_in_kd_22 = 3
lv_in_limit_22 = 44
lv_in_steer_center_22 = 54
m_steercontrol_config_5 ()
MotorC.StartPower ( - 80 )
Program.Delay ( 2000 )
MotorC.ResetCount ()
gv_anglekp = 2
gv_anglekd = 3
gv_angleold = 0
gv_clockwise = 0
gv_turncounter = 0
gv_turnangle = 89.6
gv_fakewheelbase = 14.5
gv_uartready = 0
gv_steeringready = 0
gv_odometryready = 0
gv_i2cready = 0
gv_anglepointx = 0
gv_anglepointy = 0
gv_powercenter = 100
gv_powerdetour = 100
gv_lastsignature = 0
Thread.Run = f_uart_0
Thread.Run = f_i2c_0
Thread.Run = f_odometry_0
Thread.Run = f_steering_0
Thread.Run = f_display_0
While gv_uartready = 0 Or gv_steeringready = 0 Or gv_odometryready = 0 Or gv_i2cready = 0
EndWhile
f_start_0 ()
While gv_turncounter < 100
gv_iswhite = 1
gv_isorange = 0
While gv_iswhite = 1 Or Time.Get1 () < 500 Or gv_isorange <> gv_clockwise
If gv_signature = 0 Or gv_y > 35 Or gv_y < - 35 Then
MotorAB.SetPower ( gv_powercenter )
lv_x_3 = gv_x + 25
lv_y_3 = 0
f_steertopoint_2 ()
Else
MotorAB.SetPower ( gv_powerdetour )
f_detourobstacle_0 ()
EndIf
f_colorcheck_2 ()
gv_iswhite = lv_iswhite_1
gv_isorange = lv_isorange_1
EndWhile
Speaker.Tone ( 50 , 3000 , 100 )
lv_turnangle_6 = gv_turnangle
f_reset_1 ()
Time.Reset1 ()
EndWhile
gv_iswhite = 1
gv_isorange = 0
While gv_iswhite = 1 Or Time.Get1 () < 500 Or gv_isorange <> gv_clockwise
If gv_signature = 0 Or gv_y > 35 Or gv_y < - 35 Then
MotorAB.SetPower ( gv_powercenter )
lv_x_3 = gv_x + 25
lv_y_3 = 0
f_steertopoint_2 ()
Else
MotorAB.SetPower ( gv_powerdetour )
f_detourobstacle_0 ()
EndIf
f_colorcheck_2 ()
gv_iswhite = lv_iswhite_1
gv_isorange = lv_isorange_1
EndWhile
Speaker.Tone ( 50 , 3000 , 100 )
gv_turncounter = gv_turncounter + 1
Time.Reset1 ()
If gv_lastsignature = 1 Then
If gv_clockwise = 0 Then
gv_clockwise = 1
gv_anglepointy = 50
Else
gv_clockwise = 0
gv_anglepointy = - 50
EndIf
lv_angle_12 = gv_gyroangle - 180
m_advgyro_resetport2_1 ()
m_advgyro_writeport2_1 ()
gv_gyroangle = lv_angle_13
MotorAB.OffAndBrake ()
While gv_x > 0
If gv_signature = 0 Or gv_y > 35 Or gv_y < - 35 Then
MotorAB.SetPower ( gv_powercenter )
lv_x_3 = gv_x + 25
lv_y_3 = 0
f_steertopoint_2 ()
Else
MotorAB.SetPower ( gv_powerdetour )
f_detourobstacle_0 ()
EndIf
EndWhile
EndIf
Speaker.Tone ( 50 , 300 , 300 )
While gv_turncounter < 13
gv_iswhite = 1
gv_isorange = 0
While gv_iswhite = 1 Or Time.Get1 () < 500 Or gv_isorange <> gv_clockwise
If gv_signature = 0 Or gv_y > 35 Or gv_y < - 35 Then
MotorAB.SetPower ( gv_powercenter )
lv_x_3 = gv_x + 25
lv_y_3 = 0
f_steertopoint_2 ()
Else
MotorAB.SetPower ( gv_powerdetour )
f_detourobstacle_0 ()
EndIf
f_colorcheck_2 ()
gv_iswhite = lv_iswhite_1
gv_isorange = lv_isorange_1
EndWhile
Speaker.Tone ( 50 , 3000 , 100 )
lv_turnangle_6 = gv_turnangle
f_reset_1 ()
Time.Reset1 ()
EndWhile
Sub f_uart_0
gv_uartready = 1
While 1 = 1
m_advgyro_writeport2_1 ()
gv_gyroangle = lv_angle_13
m_colorrgb_readport3_3 ()
gv_r = lv_red_15
gv_g = lv_blue_15
gv_b = lv_green_15
EndWhile
EndSub
Sub f_i2c_0
gv_i2cready = 1
While 1 = 1
lv_port_26 = 1
m_advpixy_getlargest_4 ()
gv_pixyx = lv_x_26
gv_pixyy = lv_y_26
gv_signature = lv_signature_26
EndWhile
EndSub
Sub f_steering_0
gv_steeringready = 1
While 1 = 1
lv_encoder_23 = MotorC.GetTacho ()
m_steercontrol_core_2 ()
gv_powerc = lv_power_23
MotorC.StartPower ( gv_powerc )
EndWhile
EndSub
Sub f_odometry_0
gv_odometryready = 1
While 1 = 1
m_advencoder_getchangea_1 ()
gv_encchangea = lv_change_21
lv_angle_17 = gv_gyroangle
lv_encchange_17 = gv_encchangea
m_odometry_write_2 ()
m_odometry_read_2 ()
gv_x = lv_xodom_18
gv_y = lv_yodom_18
EndWhile
EndSub
Sub f_display_0
While 1 = 1
LCD.Text ( 1 , 10 , 10 , 2 , gv_x )
LCD.Text ( 1 , 10 , 40 , 2 , gv_y )
Program.Delay ( 1 )
LCD.Clear ()
EndWhile
EndSub
Sub f_colorcheck_2
If gv_b < 25 Then
lv_iswhite_1 = 0
Else
lv_iswhite_1 = 1
EndIf
If gv_r > 50 Then
lv_isorange_1 = 1
Else
lv_isorange_1 = 0
EndIf
EndSub
Sub f_anglecore_2
lv_aim_2 = gv_anglekp * lv_angle_2 + gv_anglekd * ( lv_angle_2 - gv_angleold )
gv_angleold = lv_angle_2
EndSub
Sub f_steertopoint_2
lv_deltax_3 = lv_x_3 - gv_x
lv_deltay_3 = lv_y_3 - gv_y
lv_y_27 = lv_deltay_3
lv_x_27 = lv_deltax_3
m_tool_atan2_3 ()
lv_heading_3 = lv_n_27
lv_angle_28 = gv_gyroangle - lv_heading_3
m_toolbox_anglewrap_2 ()
lv_error_3 = lv_wrapped_angle_28
lv_angle_2 = lv_error_3
f_anglecore_2 ()
lv_headingdifference_3 = lv_aim_2
lv_target_25 = lv_headingdifference_3
m_steercontrol_settarget_1 ()
EndSub
Sub f_drivetopoint_2
While gv_x <= lv_x_5 - 5 Or gv_y <= lv_y_5 - 5 Or gv_y >= lv_y_5 + 5
lv_x_3 = lv_x_5
lv_y_3 = lv_y_5
f_steertopoint_2 ()
EndWhile
Speaker.Tone ( 100 , 300 , 100 )
EndSub
Sub f_reset_1
lv_b1_6 = 80.5
lv_b2_6 = 136
lv_x1_6 = gv_x + Math.Cos ( Math.GetRadians ( gv_gyroangle ) ) * gv_fakewheelbase
lv_y1_6 = gv_y + Math.Sin ( Math.GetRadians ( gv_gyroangle ) ) * gv_fakewheelbase
lv_iswhite_6 = 1
lv_isorange_6 = gv_clockwise
While lv_iswhite_6 = 1 Or lv_isorange_6 = gv_clockwise
If gv_signature = 0 Then
lv_x_3 = gv_anglepointx
lv_y_3 = gv_anglepointy
f_steertopoint_2 ()
Else
f_detourobstacle_0 ()
EndIf
f_colorcheck_2 ()
lv_iswhite_6 = lv_iswhite_1
lv_isorange_6 = lv_isorange_1
EndWhile
lv_x2_6 = gv_x + Math.Cos ( Math.GetRadians ( gv_gyroangle ) ) * gv_fakewheelbase
lv_y2_6 = gv_y + Math.Sin ( Math.GetRadians ( gv_gyroangle ) ) * gv_fakewheelbase
If gv_clockwise = 0 Then
lv_angle_12 = gv_gyroangle + lv_turnangle_6
m_advgyro_resetport2_1 ()
lv_deltax_6 = lv_y1_6 - lv_y2_6
lv_deltay_6 = lv_x1_6 - lv_x2_6
lv_resetx_6 = ( lv_deltay_6 + lv_b1_6 - lv_b2_6 - 0.577 * lv_deltax_6 ) / 1.16
lv_resety_6 = - 1.73 * lv_resetx_6 - lv_b2_6
Else
lv_angle_12 = gv_gyroangle - lv_turnangle_6
m_advgyro_resetport2_1 ()
lv_deltax_6 = lv_y2_6 - lv_y1_6
lv_deltay_6 = lv_x1_6 - lv_x2_6
lv_resetx_6 = ( lv_deltay_6 + lv_b1_6 - lv_b2_6 - 0.577 * lv_deltax_6 ) / 1.16
lv_resety_6 = 1.73 * lv_resetx_6 + lv_b2_6
EndIf
m_advgyro_writeport2_1 ()
gv_gyroangle = lv_angle_13
lv_resetx_6 = lv_resetx_6 - Math.Cos ( Math.GetRadians ( gv_gyroangle ) ) * gv_fakewheelbase
lv_resety_6 = lv_resety_6 - Math.Sin ( Math.GetRadians ( gv_gyroangle ) ) * gv_fakewheelbase
lv_xodom_19 = lv_resetx_6
lv_yodom_19 = lv_resety_6
m_odometry_reset_2 ()
gv_turncounter = gv_turncounter + 1
EndSub
Sub f_detourobstacle_0
If gv_signature = 2 Then
Speaker.Tone ( 50 , 1500 , 50 )
lv_desiredx_8 = 0.226 * gv_pixyy + 74.9
Else
Speaker.Tone ( 50 , 500 , 50 )
lv_desiredx_8 = - 0.226 * gv_pixyy - 74.9
EndIf
lv_target_25 = ( lv_desiredx_8 - gv_pixyx ) * 0.5
m_steercontrol_settarget_1 ()
If gv_pixyy > 70 And gv_turnangle < 8 Then
gv_lastsignature = gv_signature
EndIf
EndSub
Sub f_start_0
lv_iswhite_9 = 1
lv_isorange_9 = 0
MotorAB.Start ()
While lv_iswhite_9 = 1 Or Time.Get1 () < 500
If gv_signature = 0 Or gv_y > 35 Or gv_y < - 35 Then
MotorAB.SetPower ( gv_powercenter )
lv_target_25 = gv_gyroangle
m_steercontrol_settarget_1 ()
Else
MotorAB.SetPower ( gv_powerdetour )
f_detourobstacle_0 ()
EndIf
f_colorcheck_2 ()
lv_iswhite_9 = lv_iswhite_1
lv_isorange_9 = lv_isorange_1
EndWhile
gv_clockwise = lv_isorange_9
gv_anglepointx = 100
If lv_isorange_9 = 1 Then
gv_anglepointy = 50
Else
gv_anglepointy = - 50
EndIf
Speaker.Tone ( 50 , 3000 , 100 )
lv_turnangle_6 = gv_turnangle
f_reset_1 ()
Time.Reset1 ()
EndSub
Sub m_advgyro_checkreset_2
Sensor.SetMode ( lv_port_10 , 0 )
Sensor.ReadRawValue ( lv_port_10 , 0 )
Program.Delay ( 600 )
If Sensor.ReadRawValue ( lv_port_10 , 0 ) <> 0 Then
lv_result_10 = 0
Speaker.Note ( 100 , "C5" , 100 )
Speaker.Wait ()
Speaker.Note ( 100 , "C5" , 100 )
Speaker.Wait ()
Speaker.Note ( 100 , "C5" , 100 )
Speaker.Wait ()
Else
lv_result_10 = 1
EndIf
EndSub
Sub m_advgyro_hardreset_1
Sensor.SetMode ( lv_port_11 , 4 )
Program.Delay ( 550 )
Sensor.SetMode ( lv_port_11 , 0 )
EndSub
Sub m_advgyro_resetport2_1
lv_value_12 = Sensor2.Raw1 ()
pr_advgyro_gyro_last = lv_value_12 - lv_angle_12
EndSub
Sub m_advgyro_writeport2_1
lv_value_13 = Sensor2.Raw1 ()
lv_unwrapped_angle_13 = lv_value_13 - pr_advgyro_gyro_last
lv_angle_28 = lv_unwrapped_angle_13
m_toolbox_anglewrap_2 ()
lv_angle_13 = lv_wrapped_angle_28
pr_advgyro_gyro_angle = lv_angle_13
EndSub
Sub m_colorrgb_config_6
pr_colorrgb_s_red_k = 100 / ( lv_red_max_14 - lv_red_min_14 )
pr_colorrgb_s_red_b = lv_red_min_14 * ( - 1 ) * pr_colorrgb_s_red_k
pr_colorrgb_s_blue_k = 100 / ( lv_blue_max_14 - lv_blue_min_14 )
pr_colorrgb_s_blue_b = lv_blue_min_14 * ( - 1 ) * pr_colorrgb_s_blue_k
pr_colorrgb_s_green_k = 100 / ( lv_green_max_14 - lv_green_min_14 )
pr_colorrgb_s_green_b = lv_green_min_14 * ( - 1 ) * pr_colorrgb_s_green_k
EndSub
Sub m_colorrgb_readport3_3
lv_r_15 = 0
lv_g_15 = 0
lv_b_15 = 0
Sensor3.Raw3 ( lv_r_15 , lv_g_15 , lv_b_15 )
lv_red_15 = lv_r_15 * pr_colorrgb_s_red_k + pr_colorrgb_s_red_b
lv_blue_15 = lv_b_15 * pr_colorrgb_s_blue_k + pr_colorrgb_s_blue_b
lv_green_15 = lv_g_15 * pr_colorrgb_s_green_k + pr_colorrgb_s_green_b
EndSub
Sub m_odometry_config_1
pr_odometry_coefficient = lv_coef_16
pr_odometry_x = 0
pr_odometry_y = 0
pr_odometry_reset = 0
pr_odometry_resxodom = 0
pr_odometry_resyodom = 0
EndSub
Sub m_odometry_write_2
If pr_odometry_reset = 1 Then
pr_odometry_x = pr_odometry_resxodom
pr_odometry_y = pr_odometry_resyodom
pr_odometry_reset = 0
Else
pr_odometry_x = pr_odometry_x + ( lv_encchange_17 / pr_odometry_coefficient ) * Math.Cos ( Math.GetRadians ( lv_angle_17 ) )
pr_odometry_y = pr_odometry_y + ( lv_encchange_17 / pr_odometry_coefficient ) * Math.Sin ( Math.GetRadians ( lv_angle_17 ) )
EndIf
EndSub
Sub m_odometry_read_2
lv_xodom_18 = pr_odometry_x
lv_yodom_18 = pr_odometry_y
EndSub
Sub m_odometry_reset_2
pr_odometry_resxodom = lv_xodom_19
pr_odometry_resyodom = lv_yodom_19
pr_odometry_reset = 1
EndSub
Sub m_advencoder_config_0
pr_advencoder_lasta = 0
pr_advencoder_lastb = 0
pr_advencoder_lastc = 0
pr_advencoder_lastd = 0
MotorA.ResetCount ()
MotorB.ResetCount ()
MotorC.ResetCount ()
MotorD.ResetCount ()
EndSub
Sub m_advencoder_getchangea_1
lv_enc_21 = MotorA.GetTacho ()
lv_change_21 = lv_enc_21 - pr_advencoder_lasta
pr_advencoder_lasta = lv_enc_21
EndSub
Sub m_steercontrol_config_5
pr_steercontrol_kp = lv_in_kp_22
pr_steercontrol_ki = lv_in_ki_22
pr_steercontrol_kd = lv_in_kd_22
pr_steercontrol_limit = lv_in_limit_22
pr_steercontrol_steer_center = lv_in_steer_center_22
pr_steercontrol_steer_target = 0
pr_steercontrol_error_old = 0
pr_steercontrol_error_sum = 0
EndSub
Sub m_steercontrol_core_2
lv_x_24 = pr_steercontrol_steer_target
lv_min_24 = 0 - pr_steercontrol_limit
lv_max_24 = pr_steercontrol_limit
m_tool_constrain_4 ()
lv_target_23 = lv_n_24
lv_error_23 = pr_steercontrol_steer_center + lv_target_23 - lv_encoder_23
lv_pd_23 = pr_steercontrol_kp * lv_error_23 + pr_steercontrol_kd * ( lv_error_23 - pr_steercontrol_error_old )
lv_power_23 = pr_steercontrol_ki * pr_steercontrol_error_sum + lv_pd_23
pr_steercontrol_error_sum = pr_steercontrol_error_sum / 1.1 + lv_error_23
pr_steercontrol_error_old = lv_error_23
EndSub
Sub m_tool_constrain_4
If lv_x_24 < lv_min_24 Then
lv_n_24 = lv_min_24
ElseIf lv_x_24 > lv_max_24 Then
lv_n_24 = lv_max_24
Else
lv_n_24 = lv_x_24
EndIf
EndSub
Sub m_steercontrol_settarget_1
pr_steercontrol_steer_target = lv_target_25
EndSub
Sub m_advpixy_getlargest_4
lv_values_26 = Sensor.ReadI2CRegisters ( lv_port_26 , 1 , 80 , 6 )
lv_sig1_26 = lv_values_26 [ 0 ]
lv_sig2_26 = lv_values_26 [ 1 ]
lv_signature_26 = ( lv_sig1_26 + lv_sig2_26 * 256 ) - 8 * Math.Floor ( ( lv_sig1_26 + lv_sig2_26 * 256 ) / 8 )
lv_x_26 = lv_values_26 [ 2 ] - 128
lv_y_26 = lv_values_26 [ 3 ]
EndSub
Sub m_tool_atan2_3
If lv_x_27 > 0 Then
lv_n_27 = Math.GetDegrees ( Math.ArcTan ( lv_y_27 / lv_x_27 ) )
ElseIf lv_x_27 < 0 Then
If lv_y_27 >= 0 Then
lv_n_27 = Math.GetDegrees ( Math.ArcTan ( lv_y_27 / lv_x_27 ) ) + 180
Else
lv_n_27 = Math.GetDegrees ( Math.ArcTan ( lv_y_27 / lv_x_27 ) ) - 180
EndIf
ElseIf lv_x_27 = 0 Then
If lv_y_27 = 0 Then
lv_n_27 = 0
ElseIf lv_y_27 > 0 Then
lv_n_27 = 90
ElseIf lv_y_27 < 0 Then
lv_n_27 = - 90
EndIf
EndIf
EndSub
Sub m_toolbox_anglewrap_2
If lv_angle_28 < 0 Then
lv_a_28 = - 180
Else
lv_a_28 = 180
EndIf
lv_wrapped_angle_28 = Math.Remainder ( ( lv_angle_28 + lv_a_28 ) , 360 ) - lv_a_28
EndSub
