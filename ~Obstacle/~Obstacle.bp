pr_advgyro_gyro_last = 0
pr_advgyro_gyro_angle = 0
pr_colorrgb_s_red_k = 0
pr_colorrgb_s_red_b = 0
pr_colorrgb_s_blue_k = 0
pr_colorrgb_s_blue_b = 0
pr_colorrgb_s_green_k = 0
pr_colorrgb_s_green_b = 0
pr_odometry_coefficient = 0
pr_odometry_x = 0
pr_odometry_y = 0
pr_odometry_reset = 0
pr_odometry_resxodom = 0
pr_odometry_resyodom = 0
pr_advencoder_lasta = 0
pr_advencoder_lastb = 0
pr_advencoder_lastc = 0
pr_advencoder_lastd = 0
pr_steercontrol_kp = 0
pr_steercontrol_ki = 0
pr_steercontrol_kd = 0
pr_steercontrol_limit = 0
pr_steercontrol_steer_center = 0
pr_steercontrol_steer_target = 0
pr_steercontrol_error_old = 0
pr_steercontrol_error_sum = 0
lv_port_14 = 0
lv_result_14 = 0
lv_port_15 = 0
lv_red_min_18 = 0
lv_red_max_18 = 0
lv_blue_min_18 = 0
lv_blue_max_18 = 0
lv_green_min_18 = 0
lv_green_max_18 = 0
lv_coef_20 = 0
lv_angle_16 = 0
lv_in_kp_26 = 0
lv_in_ki_26 = 0
lv_in_kd_26 = 0
lv_in_limit_26 = 0
lv_in_steer_center_26 = 0
lv_iswhite_2 = 0
lv_isorange_2 = 0
lv_turnangle_9 = 0
lv_yes_1 = 0
lv_no_1 = 0
lv_angle_17 = 0
lv_xodom_23 = 0
lv_yodom_23 = 0
lv_angle_21 = 0
lv_encchange_21 = 0
lv_target_29 = 0
lv_red_19 = 0
lv_blue_19 = 0
lv_green_19 = 0
lv_port_30 = 0
lv_x_30 = 0
lv_y_30 = 0
lv_signature_30 = 0
lv_encoder_27 = 0
lv_power_27 = 0
lv_change_25 = 0
lv_xodom_22 = 0
lv_yodom_22 = 0
lv_y_31 = 0
lv_x_31 = 0
lv_n_31 = 0
lv_angle_32 = 0
lv_wrapped_angle_32 = 0
lv_angle_3 = 0
lv_aim_3 = 0
lv_x_4 = 0
lv_y_4 = 0
lv_x_6 = 0
lv_y_6 = 0
lv_turnangle_8 = 0
lv_x_28 = 0
lv_min_28 = 0
lv_max_28 = 0
lv_n_28 = 0
gv_result = 0
gv_iswhite = 0
gv_isorange = 0
gv_clockwise = 0
gv_gyroangle = 0
gv_r = 0
gv_g = 0
gv_b = 0
gv_pixyx = 0
gv_pixyy = 0
gv_signature = 0
gv_powerc = 0
gv_encchangea = 0
gv_x = 0
gv_y = 0
lv_heading_4 = 0
lv_error_4 = 0
lv_headingdifference_4 = 0
lv_iswhite_5 = 0
lv_isorange_5 = 0
lv_iswhite_13 = 0
lv_isorange_13 = 0
lv_angle_17 = 0
lv_target_27 = 0
gv_col = 0
gv_rmin = 0
gv_rmax = 0
gv_gmin = 0
gv_gmax = 0
gv_bmin = 0
gv_bmax = 0
gv_anglekp = 0
gv_anglekd = 0
gv_angleold = 0
gv_turncounter = 0
gv_turnangle = 0
gv_fakewheelbase = 0
gv_uartready = 0
gv_steeringready = 0
gv_odometryready = 0
gv_i2cready = 0
gv_centerpower = 0
gv_detourpower = 0
gv_lastsignature = 0
gv_yrange = 0
gv_ycamerarange = 0
gv_target = 0
Sensor.SetMode ( 2 , 0 )
Sensor.SetMode ( 3 , 4 )
lv_port_14 = 2
m_advgyro_checkreset_2 ()
gv_result = lv_result_14
While gv_result = 0
Program.Delay ( 1000 )
lv_port_15 = 2
m_advgyro_hardreset_1 ()
lv_port_14 = 2
m_advgyro_checkreset_2 ()
gv_result = lv_result_14
EndWhile
gv_col = EV3File.OpenRead ( "col" )
gv_rmin = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_rmax = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_gmin = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_gmax = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_bmin = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
gv_bmax = EV3File.ConvertToNumber ( EV3File.ReadLine ( gv_col ) )
lv_red_min_18 = gv_rmin
lv_red_max_18 = gv_rmax
lv_blue_min_18 = gv_gmin
lv_blue_max_18 = gv_gmax
lv_green_min_18 = gv_bmin
lv_green_max_18 = gv_bmax
m_colorrgb_config_6 ()
lv_coef_20 = 15.53
m_odometry_config_1 ()
lv_angle_16 = 0
m_advgyro_resetport2_1 ()
m_advencoder_config_0 ()
lv_in_kp_26 = 1.5
lv_in_ki_26 = 0.1
lv_in_kd_26 = 3
lv_in_limit_26 = 40
lv_in_steer_center_26 = 54
m_steercontrol_config_5 ()
MotorC.StartPower ( - 80 )
Program.Delay ( 2000 )
MotorC.ResetCount ()
gv_anglekp = 1
gv_anglekd = 3
gv_angleold = 0
gv_clockwise = 0
gv_turncounter = 0
gv_turnangle = 90
gv_fakewheelbase = 13.9
gv_uartready = 0
gv_steeringready = 0
gv_odometryready = 0
gv_i2cready = 0
gv_centerpower = 80
gv_detourpower = 80
gv_lastsignature = 1
gv_yrange = 32
gv_ycamerarange = 25
Thread.Run = f_uart_0
Thread.Run = f_i2c_0
Thread.Run = f_odometry_0
Thread.Run = f_steering_0
Thread.Run = f_display_0
While gv_uartready = 0 Or gv_steeringready = 0 Or gv_odometryready = 0 Or gv_i2cready = 0
EndWhile
f_start_0 ()
MotorAB.SetPower ( 60 )
While gv_turncounter < 8
gv_iswhite = 1
gv_isorange = 0
While Time.Get1 () < 500 Or gv_iswhite = 1 Or gv_isorange <> gv_clockwise
f_autopilot_0 ()
f_colorcheck_2 ()
gv_iswhite = lv_iswhite_2
gv_isorange = lv_isorange_2
EndWhile
Speaker.Tone ( 50 , 3000 , 100 )
lv_turnangle_9 = gv_turnangle
f_reset_1 ()
EndWhile
If gv_lastsignature = 1 Then
While Time.Get1 () < 500 Or gv_iswhite = 1 Or gv_isorange <> gv_clockwise
f_autopilot_0 ()
f_colorcheck_2 ()
gv_iswhite = lv_iswhite_2
gv_isorange = lv_isorange_2
EndWhile
Speaker.Tone ( 50 , 300 , 100 )
lv_yes_1 = gv_clockwise
f_not_2 ()
gv_clockwise = lv_no_1
lv_angle_16 = gv_gyroangle - 180
m_advgyro_resetport2_1 ()
m_advgyro_writeport2_1 ()
gv_gyroangle = lv_angle_17
lv_xodom_23 = 0 - gv_x
lv_yodom_23 = 0 - gv_y
m_odometry_reset_2 ()
lv_angle_21 = 0
lv_encchange_21 = 0
m_odometry_write_2 ()
If gv_y > 0 Then
gv_target = 40
Else
gv_target = - 40
EndIf
While Math.Abs ( gv_gyroangle ) > 20
lv_target_29 = gv_target
m_steercontrol_settarget_1 ()
EndWhile
EndIf
While gv_turncounter < 12
gv_iswhite = 1
gv_isorange = 0
While Time.Get1 () < 500 Or gv_iswhite = 1 Or gv_isorange <> gv_clockwise
f_autopilot_0 ()
f_colorcheck_2 ()
gv_iswhite = lv_iswhite_2
gv_isorange = lv_isorange_2
EndWhile
Speaker.Tone ( 50 , 3000 , 100 )
lv_turnangle_9 = gv_turnangle
f_reset_1 ()
EndWhile
While gv_x < 0 Or Time.Get1 () < 200
f_autopilot_0 ()
EndWhile
MotorAB.OffAndBrake ()
Speaker.Tone ( 100 , 3000 , 200 )
Speaker.Wait ()
Speaker.Tone ( 100 , 3000 , 200 )
Speaker.Wait ()
Speaker.Tone ( 100 , 3000 , 200 )
Speaker.Wait ()
Sub f_uart_0
gv_uartready = 1
While 1 = 1
m_advgyro_writeport2_1 ()
gv_gyroangle = lv_angle_17
m_colorrgb_readport3_3 ()
gv_r = lv_red_19
gv_g = lv_blue_19
gv_b = lv_green_19
EndWhile
EndSub
Sub f_i2c_0
gv_i2cready = 1
While 1 = 1
lv_port_30 = 1
m_advpixy_getlargest_4 ()
gv_pixyx = lv_x_30
gv_pixyy = lv_y_30
gv_signature = lv_signature_30
EndWhile
EndSub
Sub f_steering_0
gv_steeringready = 1
While 1 = 1
lv_encoder_27 = MotorC.GetTacho ()
m_steercontrol_core_2 ()
gv_powerc = lv_power_27
MotorC.StartPower ( gv_powerc )
EndWhile
EndSub
Sub f_odometry_0
gv_odometryready = 1
While 1 = 1
m_advencoder_getchangea_1 ()
gv_encchangea = lv_change_25
lv_angle_21 = gv_gyroangle
lv_encchange_21 = gv_encchangea
m_odometry_write_2 ()
m_odometry_read_2 ()
gv_x = lv_xodom_22
gv_y = lv_yodom_22
EndWhile
EndSub
Sub f_display_0
While 1 = 1
LCD.Text ( 1 , 10 , 10 , 2 , gv_gyroangle )
Program.Delay ( 1 )
LCD.Clear ()
EndWhile
EndSub
Sub f_not_2
If lv_yes_1 = 0 Then
lv_no_1 = 1
Else
lv_no_1 = 0
EndIf
EndSub
Sub f_colorcheck_2
If gv_b < 55 Then
lv_iswhite_2 = 0
Else
lv_iswhite_2 = 1
EndIf
If gv_r > 70 Then
lv_isorange_2 = 1
Else
lv_isorange_2 = 0
EndIf
EndSub
Sub f_anglecore_2
lv_aim_3 = gv_anglekp * lv_angle_3 + gv_anglekd * ( lv_angle_3 - gv_angleold )
gv_angleold = lv_angle_3
EndSub
Sub f_steertopoint_2
lv_deltax_4 = lv_x_4 - gv_x
lv_deltay_4 = lv_y_4 - gv_y
lv_y_31 = lv_deltay_4
lv_x_31 = lv_deltax_4
m_tool_atan2_3 ()
lv_heading_4 = lv_n_31
lv_angle_32 = gv_gyroangle - lv_heading_4
m_toolbox_anglewrap_2 ()
lv_error_4 = lv_wrapped_angle_32
lv_angle_3 = lv_error_4
f_anglecore_2 ()
lv_headingdifference_4 = lv_aim_3
lv_target_29 = lv_headingdifference_4
m_steercontrol_settarget_1 ()
EndSub
Sub f_drivetopoint_2
While gv_x <= lv_x_6 - 5 Or gv_y <= lv_y_6 - 5 Or gv_y >= lv_y_6 + 5
lv_x_4 = lv_x_6
lv_y_4 = lv_y_6
f_steertopoint_2 ()
EndWhile
Speaker.Tone ( 100 , 300 , 100 )
EndSub
Sub f_startreset_1
If gv_x > 40 Then
lv_resetx_8 = gv_x - 15
Else
lv_resetx_8 = gv_x + 35
EndIf
If gv_clockwise = 0 Then
lv_angle_16 = gv_gyroangle + lv_turnangle_8
m_advgyro_resetport2_1 ()
lv_resety_8 = lv_resetx_8 - 100
lv_resetx_8 = - 100 - gv_y
Else
lv_angle_16 = gv_gyroangle - lv_turnangle_8
m_advgyro_resetport2_1 ()
lv_resety_8 = 100 - lv_resetx_8
lv_resetx_8 = gv_y - 100
EndIf
m_advgyro_writeport2_1 ()
gv_gyroangle = lv_angle_17
lv_xodom_23 = lv_resetx_8
lv_yodom_23 = lv_resety_8
m_odometry_reset_2 ()
lv_angle_21 = 0
lv_encchange_21 = 0
m_odometry_write_2 ()
gv_turncounter = gv_turncounter + 1
Time.Reset1 ()
EndSub
Sub f_reset_1
If gv_clockwise = 0 Then
lv_angle_16 = gv_gyroangle + lv_turnangle_9
m_advgyro_resetport2_1 ()
lv_resety_9 = gv_x - 100
lv_resetx_9 = - 100 - gv_y
Else
lv_angle_16 = gv_gyroangle - lv_turnangle_9
m_advgyro_resetport2_1 ()
lv_resety_9 = 100 - gv_x
lv_resetx_9 = gv_y - 100
EndIf
m_advgyro_writeport2_1 ()
gv_gyroangle = lv_angle_17
lv_xodom_23 = lv_resetx_9
lv_yodom_23 = lv_resety_9
m_odometry_reset_2 ()
lv_angle_21 = 0
lv_encchange_21 = 0
m_odometry_write_2 ()
gv_turncounter = gv_turncounter + 1
Time.Reset1 ()
EndSub
Sub f_detourobstacle_0
If gv_signature = 2 Then
lv_desiredx_11 = - 0.0026 * gv_pixyy * gv_pixyy + 0.9926 * gv_pixyy + 26.461
Else
lv_desiredx_11 = 0.0026 * gv_pixyy * gv_pixyy - 0.9926 * gv_pixyy - 26.461
EndIf
lv_target_29 = ( lv_desiredx_11 - gv_pixyx ) * 0.5
m_steercontrol_settarget_1 ()
EndSub
Sub f_autopilot_0
If gv_signature = 0 Or gv_y > gv_yrange Or gv_y < - gv_yrange Then
lv_x_4 = gv_x + 50
lv_y_4 = 0
f_steertopoint_2 ()
Else
f_detourobstacle_0 ()
EndIf
EndSub
Sub f_start_0
lv_iswhite_13 = 1
lv_isorange_13 = 0
MotorAB.StartPower ( 60 )
While lv_iswhite_13 = 1
f_autopilot_0 ()
f_colorcheck_2 ()
lv_iswhite_13 = lv_iswhite_2
lv_isorange_13 = lv_isorange_2
EndWhile
gv_clockwise = lv_isorange_13
Speaker.Tone ( 50 , 3000 , 100 )
lv_turnangle_8 = gv_turnangle
f_startreset_1 ()
EndSub
Sub m_advgyro_checkreset_2
Sensor.SetMode ( lv_port_14 , 0 )
Sensor.ReadRawValue ( lv_port_14 , 0 )
Program.Delay ( 2000 )
If Sensor.ReadRawValue ( lv_port_14 , 0 ) <> 0 Then
lv_result_14 = 0
Speaker.Note ( 100 , "C5" , 100 )
Speaker.Wait ()
Speaker.Note ( 100 , "C5" , 100 )
Speaker.Wait ()
Speaker.Note ( 100 , "C5" , 100 )
Speaker.Wait ()
Else
lv_result_14 = 1
EndIf
EndSub
Sub m_advgyro_hardreset_1
Sensor.SetMode ( lv_port_15 , 4 )
Program.Delay ( 550 )
Sensor.SetMode ( lv_port_15 , 0 )
EndSub
Sub m_advgyro_resetport2_1
lv_value_16 = Sensor2.Raw1 ()
pr_advgyro_gyro_last = lv_value_16 - lv_angle_16
EndSub
Sub m_advgyro_writeport2_1
lv_value_17 = Sensor2.Raw1 ()
lv_unwrapped_angle_17 = lv_value_17 - pr_advgyro_gyro_last
lv_angle_32 = lv_unwrapped_angle_17
m_toolbox_anglewrap_2 ()
lv_angle_17 = lv_wrapped_angle_32
pr_advgyro_gyro_angle = lv_angle_17
EndSub
Sub m_colorrgb_config_6
pr_colorrgb_s_red_k = 100 / ( lv_red_max_18 - lv_red_min_18 )
pr_colorrgb_s_red_b = lv_red_min_18 * ( - 1 ) * pr_colorrgb_s_red_k
pr_colorrgb_s_blue_k = 100 / ( lv_blue_max_18 - lv_blue_min_18 )
pr_colorrgb_s_blue_b = lv_blue_min_18 * ( - 1 ) * pr_colorrgb_s_blue_k
pr_colorrgb_s_green_k = 100 / ( lv_green_max_18 - lv_green_min_18 )
pr_colorrgb_s_green_b = lv_green_min_18 * ( - 1 ) * pr_colorrgb_s_green_k
EndSub
Sub m_colorrgb_readport3_3
lv_r_19 = 0
lv_g_19 = 0
lv_b_19 = 0
Sensor3.Raw3 ( lv_r_19 , lv_g_19 , lv_b_19 )
lv_red_19 = lv_r_19 * pr_colorrgb_s_red_k + pr_colorrgb_s_red_b
lv_blue_19 = lv_b_19 * pr_colorrgb_s_blue_k + pr_colorrgb_s_blue_b
lv_green_19 = lv_g_19 * pr_colorrgb_s_green_k + pr_colorrgb_s_green_b
EndSub
Sub m_odometry_config_1
pr_odometry_coefficient = lv_coef_20
pr_odometry_x = 0
pr_odometry_y = 0
pr_odometry_reset = 0
pr_odometry_resxodom = 0
pr_odometry_resyodom = 0
EndSub
Sub m_odometry_write_2
If pr_odometry_reset = 1 Then
pr_odometry_x = pr_odometry_resxodom
pr_odometry_y = pr_odometry_resyodom
pr_odometry_reset = 0
Else
pr_odometry_x = pr_odometry_x + ( lv_encchange_21 / pr_odometry_coefficient ) * Math.Cos ( Math.GetRadians ( lv_angle_21 ) )
pr_odometry_y = pr_odometry_y + ( lv_encchange_21 / pr_odometry_coefficient ) * Math.Sin ( Math.GetRadians ( lv_angle_21 ) )
EndIf
EndSub
Sub m_odometry_read_2
lv_xodom_22 = pr_odometry_x
lv_yodom_22 = pr_odometry_y
EndSub
Sub m_odometry_reset_2
pr_odometry_resxodom = lv_xodom_23
pr_odometry_resyodom = lv_yodom_23
pr_odometry_reset = 1
EndSub
Sub m_advencoder_config_0
pr_advencoder_lasta = 0
pr_advencoder_lastb = 0
pr_advencoder_lastc = 0
pr_advencoder_lastd = 0
MotorA.ResetCount ()
MotorB.ResetCount ()
MotorC.ResetCount ()
MotorD.ResetCount ()
EndSub
Sub m_advencoder_getchangea_1
lv_enc_25 = MotorA.GetTacho ()
lv_change_25 = lv_enc_25 - pr_advencoder_lasta
pr_advencoder_lasta = lv_enc_25
EndSub
Sub m_steercontrol_config_5
pr_steercontrol_kp = lv_in_kp_26
pr_steercontrol_ki = lv_in_ki_26
pr_steercontrol_kd = lv_in_kd_26
pr_steercontrol_limit = lv_in_limit_26
pr_steercontrol_steer_center = lv_in_steer_center_26
pr_steercontrol_steer_target = 0
pr_steercontrol_error_old = 0
pr_steercontrol_error_sum = 0
EndSub
Sub m_steercontrol_core_2
lv_x_28 = pr_steercontrol_steer_target
lv_min_28 = 0 - pr_steercontrol_limit
lv_max_28 = pr_steercontrol_limit
m_tool_constrain_4 ()
lv_target_27 = lv_n_28
lv_error_27 = pr_steercontrol_steer_center + lv_target_27 - lv_encoder_27
lv_pd_27 = pr_steercontrol_kp * lv_error_27 + pr_steercontrol_kd * ( lv_error_27 - pr_steercontrol_error_old )
lv_power_27 = pr_steercontrol_ki * pr_steercontrol_error_sum + lv_pd_27
pr_steercontrol_error_sum = pr_steercontrol_error_sum / 1.1 + lv_error_27
pr_steercontrol_error_old = lv_error_27
EndSub
Sub m_tool_constrain_4
If lv_x_28 < lv_min_28 Then
lv_n_28 = lv_min_28
ElseIf lv_x_28 > lv_max_28 Then
lv_n_28 = lv_max_28
Else
lv_n_28 = lv_x_28
EndIf
EndSub
Sub m_steercontrol_settarget_1
pr_steercontrol_steer_target = lv_target_29
EndSub
Sub m_advpixy_getlargest_4
lv_values_30 = Sensor.ReadI2CRegisters ( lv_port_30 , 1 , 80 , 6 )
lv_sig1_30 = lv_values_30 [ 0 ]
lv_sig2_30 = lv_values_30 [ 1 ]
lv_signature_30 = ( lv_sig1_30 + lv_sig2_30 * 256 ) - 8 * Math.Floor ( ( lv_sig1_30 + lv_sig2_30 * 256 ) / 8 )
lv_x_30 = lv_values_30 [ 2 ] - 128
lv_y_30 = lv_values_30 [ 3 ]
EndSub
Sub m_tool_atan2_3
If lv_x_31 > 0 Then
lv_n_31 = Math.GetDegrees ( Math.ArcTan ( lv_y_31 / lv_x_31 ) )
ElseIf lv_x_31 < 0 Then
If lv_y_31 >= 0 Then
lv_n_31 = Math.GetDegrees ( Math.ArcTan ( lv_y_31 / lv_x_31 ) ) + 180
Else
lv_n_31 = Math.GetDegrees ( Math.ArcTan ( lv_y_31 / lv_x_31 ) ) - 180
EndIf
ElseIf lv_x_31 = 0 Then
If lv_y_31 = 0 Then
lv_n_31 = 0
ElseIf lv_y_31 > 0 Then
lv_n_31 = 90
ElseIf lv_y_31 < 0 Then
lv_n_31 = - 90
EndIf
EndIf
EndSub
Sub m_toolbox_anglewrap_2
If lv_angle_32 < 0 Then
lv_a_32 = - 180
Else
lv_a_32 = 180
EndIf
lv_wrapped_angle_32 = Math.Remainder ( ( lv_angle_32 + lv_a_32 ) , 360 ) - lv_a_32
EndSub
