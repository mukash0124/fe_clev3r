DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VPR_ADVGYRO_GYRO_LAST
DATAF VPR_ADVGYRO_GYRO_ANGLE
DATAF VLV_PORT_1
DATAF VLV_RESULT_1
DATAF VLV_PORT_2
DATAF VLV_ANGLE_3
DATAF VLV_ANGLE_4
DATAF VLV_PORT_6
DATAF VLV_X_6
DATAF VLV_Y_6
DATAF VLV_SIGNATURE_6
DATAF VLV_ANGLE_5
DATAF VLV_WRAPPED_ANGLE_5
DATAF VGV_RESULT
DATAF VGV_GYROANGLE
DATAF VGV_PIXYX
DATAF VGV_PIXYY
DATAF VGV_SIGNATURE
DATAF VGV_UART
DATAF VGV_I2C
DATAF VGV_I2CREADY
DATAF VLV_VALUE_3
DATAF VLV_VALUE_4
DATAF VLV_UNWRAPPED_ANGLE_4
DATAF VLV_A_5
ARRAY16 VLV_VALUES_6 2
DATAF VLV_SIG1_6
DATAF VLV_SIG2_6
DATA32 RUNCOUNTER_F_UART_0
DATA32 RUNCOUNTER_F_I2C_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VPR_ADVGYRO_GYRO_LAST
    MOVEF_F 0.0 VPR_ADVGYRO_GYRO_ANGLE
    MOVEF_F 0.0 VLV_PORT_1
    MOVEF_F 0.0 VLV_RESULT_1
    MOVEF_F 0.0 VLV_PORT_2
    MOVEF_F 0.0 VLV_ANGLE_3
    MOVEF_F 0.0 VLV_ANGLE_4
    MOVEF_F 0.0 VLV_PORT_6
    MOVEF_F 0.0 VLV_X_6
    MOVEF_F 0.0 VLV_Y_6
    MOVEF_F 0.0 VLV_SIGNATURE_6
    MOVEF_F 0.0 VLV_ANGLE_5
    MOVEF_F 0.0 VLV_WRAPPED_ANGLE_5
    MOVEF_F 0.0 VGV_RESULT
    MOVEF_F 0.0 VGV_GYROANGLE
    MOVEF_F 0.0 VGV_PIXYX
    MOVEF_F 0.0 VGV_PIXYY
    MOVEF_F 0.0 VGV_SIGNATURE
    MOVEF_F 0.0 VGV_UART
    MOVEF_F 0.0 VGV_I2C
    MOVEF_F 0.0 VGV_I2CREADY
    MOVEF_F 0.0 VLV_VALUE_3
    MOVEF_F 0.0 VLV_VALUE_4
    MOVEF_F 0.0 VLV_UNWRAPPED_ANGLE_4
    MOVEF_F 0.0 VLV_A_5
    CALL ARRAYCREATE_FLOAT VLV_VALUES_6
    MOVEF_F 0.0 VLV_SIG1_6
    MOVEF_F 0.0 VLV_SIG2_6
    MOVE32_32 0 RUNCOUNTER_F_UART_0
    MOVE32_32 0 RUNCOUNTER_F_I2C_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_UART_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_UART_0 0
    CALL GETANDINC32 RUNCOUNTER_F_UART_0 -1 RUNCOUNTER_F_UART_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_I2C_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_I2C_0 1
    CALL GETANDINC32 RUNCOUNTER_F_I2C_0 -1 RUNCOUNTER_F_I2C_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_UART_0
subcall PROGRAM_F_I2C_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch58
    WRITE32 ENDSUB_F_UART_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UART_0
  dispatch58:
    JR_NEQ32 SUBPROGRAM 1 dispatch59
    WRITE32 ENDSUB_F_I2C_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_I2C_0
  dispatch59:
    MOVEF_F 0.0 VPR_ADVGYRO_GYRO_LAST
    MOVEF_F 0.0 VPR_ADVGYRO_GYRO_ANGLE
    MOVEF_F 0.0 VLV_PORT_1
    MOVEF_F 0.0 VLV_RESULT_1
    MOVEF_F 0.0 VLV_PORT_2
    MOVEF_F 0.0 VLV_ANGLE_3
    MOVEF_F 0.0 VLV_ANGLE_4
    MOVEF_F 0.0 VLV_PORT_6
    MOVEF_F 0.0 VLV_X_6
    MOVEF_F 0.0 VLV_Y_6
    MOVEF_F 0.0 VLV_SIGNATURE_6
    MOVEF_F 0.0 VLV_ANGLE_5
    MOVEF_F 0.0 VLV_WRAPPED_ANGLE_5
    MOVEF_F 0.0 VGV_RESULT
    MOVEF_F 0.0 VGV_GYROANGLE
    MOVEF_F 0.0 VGV_PIXYX
    MOVEF_F 0.0 VGV_PIXYY
    MOVEF_F 0.0 VGV_SIGNATURE
    MOVEF_F 0.0 VLV_ANGLE_4
    MOVEF_F 0.0 VGV_UART
    MOVEF_F 0.0 VGV_I2C
    DATA8 layer0
	DATA8 no0
	DATA8 mode80
	
	MOVEF_8 2.0 no0
	SUB8 no0 1 no0
	DIV8 no0 4 layer0
	MATH MOD8 no0 4 no0

	MOVEF_8 0.0 mode80
	
	INPUT_DEVICE READY_RAW layer0 no0 0 mode80 0
    MOVEF_F 2.0 VLV_PORT_1
    WRITE32 ENDSUB_M_ADVGYRO_CHECKRESET_2:CALLSUB1 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVGYRO_CHECKRESET_2
CALLSUB1:
    MOVEF_F VLV_RESULT_1 VGV_RESULT
  while2:
    JR_NEQF VGV_RESULT 0.0 endwhile2
  whilebody2:
    MOVEF_F 2.0 VLV_PORT_2
    WRITE32 ENDSUB_M_ADVGYRO_HARDRESET_1:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVGYRO_HARDRESET_1
CALLSUB3:
    MOVEF_F 2.0 VLV_PORT_1
    WRITE32 ENDSUB_M_ADVGYRO_CHECKRESET_2:CALLSUB4 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVGYRO_CHECKRESET_2
CALLSUB4:
    MOVEF_F VLV_RESULT_1 VGV_RESULT
    JR_EQF VGV_RESULT 0.0 whilebody2
  endwhile2:
    MOVEF_F 0.0 VLV_ANGLE_3
    WRITE32 ENDSUB_M_ADVGYRO_RESETPORT2_1:CALLSUB5 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVGYRO_RESETPORT2_1
CALLSUB5:
    MOVEF_F 0.0 VGV_UART
    MOVEF_F 0.0 VGV_I2C
    DATA32 tmp6
    CALL GETANDINC32 RUNCOUNTER_F_UART_0 1  RUNCOUNTER_F_UART_0 tmp6
    JR_NEQ32 0 tmp6 alreadylaunched6
    OBJECT_START TF_UART_0
  alreadylaunched6:
    DATA32 tmp7
    CALL GETANDINC32 RUNCOUNTER_F_I2C_0 1  RUNCOUNTER_F_I2C_0 tmp7
    JR_NEQ32 0 tmp7 alreadylaunched7
    OBJECT_START TF_I2C_0
  alreadylaunched7:
  while8:
    JR_NEQF 1.0 1.0 endwhile8
  whilebody8:
    STRINGS VALUE_FORMATTED VGV_UART '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_I2C '%g' 99 S.0
    CALL LCD.TEXT 1.0 10.0 40.0 2.0 S.0
    DATA32 milliseconds13
	MOVEF_32 1.0 milliseconds13
	DATA32 timer13
	TIMER_WAIT milliseconds13 timer13
	TIMER_READY timer13
    CALL LCD.CLEAR
    JR_EQF 1.0 1.0 whilebody8
  endwhile8:
ENDTHREAD:
    RETURN
SUB_F_UART_0:
  while15:
    JR_NEQF 1.0 1.0 endwhile15
  whilebody15:
    WRITE32 ENDSUB_M_ADVGYRO_WRITEPORT2_1:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVGYRO_WRITEPORT2_1
CALLSUB16:
    MOVEF_F VLV_ANGLE_4 VGV_GYROANGLE
    ADDF VGV_UART 1.0 VGV_UART
    JR_EQF 1.0 1.0 whilebody15
  endwhile15:
RETSUB_F_UART_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UART_0:
SUB_F_I2C_0:
    MOVEF_F 1.0 VGV_I2CREADY
  while18:
    JR_NEQF 1.0 1.0 endwhile18
  whilebody18:
    MOVEF_F 1.0 VLV_PORT_6
    WRITE32 ENDSUB_M_ADVPIXY_GETLARGEST_4:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_ADVPIXY_GETLARGEST_4
CALLSUB19:
    MOVEF_F VLV_X_6 VGV_PIXYX
    MOVEF_F VLV_Y_6 VGV_PIXYY
    MOVEF_F VLV_SIGNATURE_6 VGV_SIGNATURE
    ADDF VGV_I2C 1.0 VGV_I2C
    JR_EQF 1.0 1.0 whilebody18
  endwhile18:
RETSUB_F_I2C_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_I2C_0:
SUB_M_ADVGYRO_CHECKRESET_2:
    DATA8 layer21
	DATA8 no21
	DATA8 mode821
	
	MOVEF_8 VLV_PORT_1 no21
	SUB8 no21 1 no21
	DIV8 no21 4 layer21
	MATH MOD8 no21 4 no21

	MOVEF_8 0.0 mode821
	
	INPUT_DEVICE READY_RAW layer21 no21 0 mode821 0
    CALL SENSOR.READRAWVALUE VLV_PORT_1 0.0 F.0
    DATA32 milliseconds23
	MOVEF_32 600.0 milliseconds23
	DATA32 timer23
	TIMER_WAIT milliseconds23 timer23
	TIMER_READY timer23
    CALL SENSOR.READRAWVALUE VLV_PORT_1 0.0 F.0
    JR_EQF F.0 0.0 else24_1
    MOVEF_F 0.0 VLV_RESULT_1
    CALL SPEAKER.NOTE 100.0 'C5' 100.0
    SOUND_READY
    CALL SPEAKER.NOTE 100.0 'C5' 100.0
    SOUND_READY
    CALL SPEAKER.NOTE 100.0 'C5' 100.0
    SOUND_READY
    JR endif24
  else24_1:
    MOVEF_F 1.0 VLV_RESULT_1
  else24_2:
  endif24:
RETSUB_M_ADVGYRO_CHECKRESET_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVGYRO_CHECKRESET_2:
SUB_M_ADVGYRO_HARDRESET_1:
    DATA8 layer32
	DATA8 no32
	DATA8 mode832
	
	MOVEF_8 VLV_PORT_2 no32
	SUB8 no32 1 no32
	DIV8 no32 4 layer32
	MATH MOD8 no32 4 no32

	MOVEF_8 4.0 mode832
	
	INPUT_DEVICE READY_RAW layer32 no32 0 mode832 0
    DATA32 milliseconds33
	MOVEF_32 550.0 milliseconds33
	DATA32 timer33
	TIMER_WAIT milliseconds33 timer33
	TIMER_READY timer33
    DATA8 layer34
	DATA8 no34
	DATA8 mode834
	
	MOVEF_8 VLV_PORT_2 no34
	SUB8 no34 1 no34
	DIV8 no34 4 layer34
	MATH MOD8 no34 4 no34

	MOVEF_8 0.0 mode834
	
	INPUT_DEVICE READY_RAW layer34 no34 0 mode834 0
RETSUB_M_ADVGYRO_HARDRESET_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVGYRO_HARDRESET_1:
SUB_M_ADVGYRO_RESETPORT2_1:
    INPUT_READEXT 0 1 0 -1 18 1 s2out1
	MOVE32_F s2out1 VLV_VALUE_3
    SUBF VLV_VALUE_3 VLV_ANGLE_3 VPR_ADVGYRO_GYRO_LAST
RETSUB_M_ADVGYRO_RESETPORT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVGYRO_RESETPORT2_1:
SUB_M_ADVGYRO_WRITEPORT2_1:
    INPUT_READEXT 0 1 0 -1 18 1 s2out1
	MOVE32_F s2out1 VLV_VALUE_4
    SUBF VLV_VALUE_4 VPR_ADVGYRO_GYRO_LAST VLV_UNWRAPPED_ANGLE_4
    MOVEF_F VLV_UNWRAPPED_ANGLE_4 VLV_ANGLE_5
    WRITE32 ENDSUB_M_TOOLBOX_ANGLEWRAP_2:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_TOOLBOX_ANGLEWRAP_2
CALLSUB39:
    MOVEF_F VLV_WRAPPED_ANGLE_5 VLV_ANGLE_4
    MOVEF_F VLV_ANGLE_4 VPR_ADVGYRO_GYRO_ANGLE
RETSUB_M_ADVGYRO_WRITEPORT2_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVGYRO_WRITEPORT2_1:
SUB_M_TOOLBOX_ANGLEWRAP_2:
    JR_GTEQF VLV_ANGLE_5 0.0 else40_1
    MOVEF_F -180.0 VLV_A_5
    JR endif40
  else40_1:
    MOVEF_F 180.0 VLV_A_5
  else40_2:
  endif40:
    ADDF VLV_ANGLE_5 VLV_A_5 F.1
    MATH MOD F.1 360.0 F.0
    SUBF F.0 VLV_A_5 VLV_WRAPPED_ANGLE_5
RETSUB_M_TOOLBOX_ANGLEWRAP_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_TOOLBOX_ANGLEWRAP_2:
SUB_M_ADVPIXY_GETLARGEST_4:
    CALL SENSOR.READI2CREGISTERS VLV_PORT_6 1.0 80.0 6.0 VLV_VALUES_6
    CALL ARRAYGET_FLOAT 0.0 VLV_SIG1_6 VLV_VALUES_6
    CALL ARRAYGET_FLOAT 1.0 VLV_SIG2_6 VLV_VALUES_6
    MULF VLV_SIG2_6 256.0 F.1
    ADDF VLV_SIG1_6 F.1 F.0
    MULF VLV_SIG2_6 256.0 F.5
    ADDF VLV_SIG1_6 F.5 F.4
    DATAF tmpf51
    DATA8 flag51
    DIVF F.4 8.0 tmpf51
    CP_EQF 0.0 8.0 flag51
    SELECTF flag51 0.0 tmpf51 F.3

    MATH FLOOR F.3 F.2
    MULF 8.0 F.2 F.1
    SUBF F.0 F.1 VLV_SIGNATURE_6
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_VALUES_6
    SUBF F.0 128.0 VLV_X_6
    CALL ARRAYGET_FLOAT 3.0 VLV_Y_6 VLV_VALUES_6
RETSUB_M_ADVPIXY_GETLARGEST_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_ADVPIXY_GETLARGEST_4:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall SPEAKER.NOTE      // FSFV
{
	IN_F volume
	IN_S note 8
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	NOTE_TO_FREQ note tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall SENSOR.READI2CREGISTERS     // FFFFA
{
	IN_F port
	IN_F address
	IN_F registernumber
	IN_F readbytes
	IN_16 resultarray

	DATA8 layer
	DATA8 no
	DATA8 adr
	DATA32 rd
	ARRAY8 outdata 2
	ARRAY8 indata 32
	DATA8 tmp8

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 readbytes rd
	JR_GTEQ32 rd 1 rdnottoless
	MOVE32_32 1 rd
rdnottoless:
	JR_LTEQ32 rd 32 rdnottomuch
	MOVE32_32 32 rd
rdnottomuch:

	MOVEF_8 address tmp8
	WRITE8 tmp8 0 outdata
	MOVEF_8 registernumber tmp8
	WRITE8 tmp8 1 outdata

	// do the communciation
	MOVE32_8 rd tmp8
	INPUT_DEVICE SETUP layer no 1 0 2 outdata tmp8 indata 

	// decode response
	DATA32 i
	DATAF v
	ARRAY RESIZE resultarray rd
	MOVE32_32 0 i
readcopy:
	DATA32 tmp32
	SUB32 rd i tmp32
	SUB32 tmp32 1 tmp32
	MOVE32_8 tmp32 tmp8
	READ8 indata tmp8 tmp8
	MOVE8_32 0 tmp32
	INJECTLOWBYTE tmp8 tmp32
	MOVE32_F tmp32 v
	ARRAY_WRITE resultarray i v
	ADD32 i 1 i
	JR_LT32 i rd readcopy
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
